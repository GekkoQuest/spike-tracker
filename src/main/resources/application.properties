# Application Configuration
spring.application.name=spike-tracker
spring.profiles.default=prod

# Server Configuration
server.address=0.0.0.0
server.port=8080
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=2048
server.servlet.session.timeout=30m
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# Database Configuration
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/spiketracker}
spring.datasource.username=${DATABASE_USERNAME:spiketracker}
spring.datasource.password=${DATABASE_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.pool-name=SpikeTrackerHikariCP
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.open-in-view=false

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.out-of-order=false
spring.flyway.locations=classpath:db/migration

# VLR.gg API Configuration
vlrgg.api.base-url=https://vlrggapi.vercel.app

# Application-specific Configuration
app.match-tracking.update-interval=5000
app.match-tracking.max-consecutive-failures=5
app.match-tracking.health-check-threshold-ms=60000
app.match-tracking.enable-stream-scraping=true

app.scraping.enabled=true
app.scraping.user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36

app.security.allowed-origins=http://localhost:3000,http://localhost:8080,https://spike.gekko.quest
app.security.rate-limit.requests-per-minute=60

app.websocket.allowed-origins=http://localhost:3000,http://localhost:8080,https://spike.gekko.quest
app.websocket.max-connections-per-ip=10

app.api.max-history-limit=100

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.endpoint.health.group.readiness.include=readinessState,db,diskSpace
management.endpoint.health.group.liveness.include=livenessState,ping
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# Security Configuration
spring.security.require-ssl=false

# Logging Configuration
logging.level.quest.gekko.spiketracker=INFO
logging.level.org.springframework.messaging=WARN
logging.level.org.springframework.web.socket=WARN
logging.level.org.springframework.security=WARN
logging.level.org.springframework.cache=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %clr(%5p) %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} : %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=10m
spring.cache.cache-names=streamLinks,matchHistory,teamStats,healthStatus,apiStats

# Thymeleaf Configuration
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8

# Task Execution Configuration
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=15
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=SpikeTracker-
spring.task.execution.shutdown.await-termination=true
spring.task.execution.shutdown.await-termination-period=30s

# Development Profile Specific
---
spring.config.activate.on-profile=dev

# Development Database (use local PostgreSQL or environment variable)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/spiketracker_dev}

# Development Logging
logging.level.quest.gekko.spiketracker=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Development Cache
spring.thymeleaf.cache=false
spring.web.resources.static-locations=classpath:/static/
spring.web.resources.cache.period=0
spring.cache.caffeine.spec=maximumSize=100,expireAfterWrite=1m

# Development Security
app.security.rate-limit.requests-per-minute=1000
server.servlet.session.cookie.secure=false

# Development WebSocket
app.websocket.max-connections-per-ip=50

# Production Profile Specific
---
spring.config.activate.on-profile=prod

# Production Database
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}

# Production Logging
logging.level.quest.gekko.spiketracker=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.file.name=logs/spike-tracker.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.total-size-cap=100MB
logging.logback.rollingpolicy.max-history=10

# Production Cache
spring.thymeleaf.cache=true
spring.web.resources.cache.period=31536000
spring.cache.caffeine.spec=maximumSize=10000,expireAfterWrite=30m

# Production Security
server.servlet.session.cookie.secure=true
management.endpoints.web.exposure.include=health,info,prometheus

# Production Performance
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2

# Production WebSocket
app.websocket.max-connections-per-ip=5

# Test Profile Specific
---
spring.config.activate.on-profile=test

# Test Database (H2 in-memory for unit tests)
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Test JPA
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

# Test Logging
logging.level.quest.gekko.spiketracker=DEBUG
logging.level.org.springframework.test=DEBUG

# Test Cache
spring.cache.type=simple

# Disable external services in tests
app.scraping.enabled=false
vlrgg.api.base-url=http://localhost:8080/mock-api